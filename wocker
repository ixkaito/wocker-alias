#!/bin/sh -e

PWD=$(pwd)

DIR=$(pwd)
while [ "${DIR}" != "/" -a ! -e "${DIR}/Vagrantfile" ]; do
  cd ..
  DIR=$(pwd)
done
SSH_CONFIG="${DIR}/.ssh_config"

cd "${PWD}"

wocker_cli() {
  trap "rm -f '${SSH_CONFIG}'" ERR
  if [ ! -e "${SSH_CONFIG}" ]; then
    vagrant ssh-config > "${SSH_CONFIG}"
  fi
  ssh -F "${SSH_CONFIG}" wocker exit
  trap "" ERR
  echo wocker "$@" | ssh -F "${SSH_CONFIG}" wocker "bash -l"
}

case "$1" in

  #
  # Start a specific container with `vagrant up`
  #
  'up' )

    if [[ "$2" && ! "$2" =~ ^-.*$ ]]; then
      vagrant $1
      vagrant ssh-config > "${SSH_CONFIG}"
      wocker_cli start "$2"
    else
      vagrant "$@"
      vagrant ssh-config > "${SSH_CONFIG}"
    fi
    ;;

  #
  # Start a specific container with `vagrant reload`
  #
  'reload' )

    if [[ "$2" && ! "$2" =~ ^-.*$ ]]; then
      wocker_cli stop
      vagrant $1
      vagrant ssh-config > "${SSH_CONFIG}"
      wocker_cli start "$2"
    else
      vagrant "$@"
      vagrant ssh-config > "${SSH_CONFIG}"
    fi
    ;;

  #
  # Stop all containers before `vagrant halt`
  #
  'halt' )
    wocker_cli stop
    vagrant $1
    ;;

  #
  # Commonly used vagrant commands
  #
  'halt' | 'reload' | 'resume' | 'ssh' | 'status' | 'suspend' | 'up' )
    vagrant "$@"
    ;;

  #
  # Docker command aliases, Wocker original commands and others just pass through
  #
  * )
    wocker_cli "$@"
    ;;

esac
